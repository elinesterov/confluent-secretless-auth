# producer is running in the namespace consumer
apiVersion: v1
kind: Namespace
metadata:
  name: consumer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
  namespace: consumer
data:
  # TODO: bootstrap.servers should be replaced with your Kafka bootstrap server 
  config.properties: |
    bootstrap.servers=pkc-rgm37.us-west-2.aws.confluent.cloud:9092
    security.protocol=SASL_SSL
    sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='USERNAME' password='PASSWORD';
    sasl.mechanism=PLAIN
    client.dns.lookup=use_all_dns_ips
    acks=all
    key.serializer=org.apache.kafka.common.serialization.StringSerializer
    value.serializer=org.apache.kafka.common.serialization.StringSerializer
    key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
    value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
  # TODO: bootstrap.servers should be replaced with your Kafka bootstrap server
  # TODO: extension_logicalCluster should be replaced with your Kafka cluster ID
  # TODO: extension_identityPoolId should be replaced with your Confluent Identity Pool ID
  keyless.config.properties: |
    bootstrap.servers=pkc-rgm37.us-west-2.aws.confluent.cloud:9092
    security.protocol=SASL_SSL
    sasl.oauthbearer.token.endpoint.url=http://localhost:8080/api/getjwt
    sasl.login.callback.handler.class=org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerLoginCallbackHandler
    sasl.mechanism=OAUTHBEARER
    sasl.jaas.config= \
      org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
        clientId='<client-id>' \
        clientSecret='<client-secret>' \
        extension_logicalCluster='lkc-pkwjyk' \
        extension_identityPoolId='pool-Pe4W';
    acks=all
    key.serializer=org.apache.kafka.common.serialization.StringSerializer
    value.serializer=org.apache.kafka.common.serialization.StringSerializer
    key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
    value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
---
apiVersion: v1
kind: Secret
metadata:
  name: kafka-secret
  namespace: consumer
type: Opaque
data:
  username: bm90LWEtcmVhbC11c2VyLW5hbWU=
  password: bm90LWEtcmVhbC11c2VyLXBhc3N3b3JkLXdoby13b3VsZC1wdXQtaXQtaGVyZT8/Pw==
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kafka-consumer
  namespace: consumer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-consumer-deployment
  namespace: consumer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-consumer
  template:
    metadata:
      labels:
        app: kafka-consumer
        k8s.spirl.com/spiffe-csi: enabled
    spec:
      serviceAccountName: kafka-consumer
      initContainers:
      - name: init-config
        image: busybox
        command: ['sh', '-c']
        args:
        - >
          cp /config-original/*.* /config/;
          sed -i "s|username='USERNAME'|username='${KAFKA_USERNAME}'|g" /config/config.properties;
          sed -i "s|password='PASSWORD'|password='${KAFKA_PASSWORD}'|g" /config/config.properties;
        env:
        - name: KAFKA_USERNAME
          valueFrom:
            secretKeyRef:
              name: kafka-secret
              key: username
        - name: KAFKA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kafka-secret
              key: password
        volumeMounts:
        - name: config-original
          mountPath: /config-original
        - name: config-volume
          mountPath: /config
      containers:
      - name: kafka-condumer-container
        image: ghcr.io/elinesterov/simple-kafka-app-java:v0.1.0
        args: ["consumer", "/config/config.properties", "purchases"]
        volumeMounts:
        - name: config-volume
          mountPath: /config
      # - name: spiffe-proxy
      #   image: ghcr.io/elinesterov/spiffe-proxy:v0.1.0
      #   args: ["serve"]
      #   env:
      #   - name: PORT
      #     value: "8080"
      volumes:
      - name: config-original
        configMap:
          name: kafka-config
      - name: config-volume
        emptyDir: {}

